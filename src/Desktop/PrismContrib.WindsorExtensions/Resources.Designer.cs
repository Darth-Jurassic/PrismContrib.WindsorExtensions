//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18444
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrismContrib.WindsorExtensions {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PrismContrib.WindsorExtensions.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bootstrapper sequence completed. ähnelt.
        /// </summary>
        internal static string BootstrapperSequenceCompleted {
            get {
                return ResourceManager.GetString("BootstrapperSequenceCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuring default region behaviors. ähnelt.
        /// </summary>
        internal static string ConfiguringDefaultRegionBehaviors {
            get {
                return ResourceManager.GetString("ConfiguringDefaultRegionBehaviors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuring module catalog. ähnelt.
        /// </summary>
        internal static string ConfiguringModuleCatalog {
            get {
                return ResourceManager.GetString("ConfiguringModuleCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuring region adapters. ähnelt.
        /// </summary>
        internal static string ConfiguringRegionAdapters {
            get {
                return ResourceManager.GetString("ConfiguringRegionAdapters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuring ServiceLocator singleton. ähnelt.
        /// </summary>
        internal static string ConfiguringServiceLocatorSingleton {
            get {
                return ResourceManager.GetString("ConfiguringServiceLocatorSingleton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configuring the Unity container. ähnelt.
        /// </summary>
        internal static string ConfiguringUnityContainer {
            get {
                return ResourceManager.GetString("ConfiguringUnityContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating module catalog. ähnelt.
        /// </summary>
        internal static string CreatingModuleCatalog {
            get {
                return ResourceManager.GetString("CreatingModuleCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating the shell. ähnelt.
        /// </summary>
        internal static string CreatingShell {
            get {
                return ResourceManager.GetString("CreatingShell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Creating Windsor container. ähnelt.
        /// </summary>
        internal static string CreatingWindsorContainer {
            get {
                return ResourceManager.GetString("CreatingWindsorContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initializing modules. ähnelt.
        /// </summary>
        internal static string InitializingModules {
            get {
                return ResourceManager.GetString("InitializingModules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initializing the shell. ähnelt.
        /// </summary>
        internal static string InitializingShell {
            get {
                return ResourceManager.GetString("InitializingShell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Logger was created successfully. ähnelt.
        /// </summary>
        internal static string LoggerCreatedSuccessfully {
            get {
                return ResourceManager.GetString("LoggerCreatedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The method &apos;GetModuleEnumerator&apos; of the bootstrapper must be overwritten in order to use the default module initialization logic. ähnelt.
        /// </summary>
        internal static string NotOverwrittenGetModuleEnumeratorException {
            get {
                return ResourceManager.GetString("NotOverwrittenGetModuleEnumeratorException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The ILoggerFacade is required and cannot be null. ähnelt.
        /// </summary>
        internal static string NullLoggerFacadeException {
            get {
                return ResourceManager.GetString("NullLoggerFacadeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The IModuleCatalog is required and cannot be null in order to initialize the modules. ähnelt.
        /// </summary>
        internal static string NullModuleCatalogException {
            get {
                return ResourceManager.GetString("NullModuleCatalogException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The IUnityContainer is required and cannot be null. ähnelt.
        /// </summary>
        internal static string NullUnityContainerException {
            get {
                return ResourceManager.GetString("NullUnityContainerException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Registering Framework Exception Types. ähnelt.
        /// </summary>
        internal static string RegisteringFrameworkExceptionTypes {
            get {
                return ResourceManager.GetString("RegisteringFrameworkExceptionTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting the RegionManager. ähnelt.
        /// </summary>
        internal static string SettingTheRegionManager {
            get {
                return ResourceManager.GetString("SettingTheRegionManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type &apos;{0}&apos; was already registered by the application. Skipping... ähnelt.
        /// </summary>
        internal static string TypeMappingAlreadyRegistered {
            get {
                return ResourceManager.GetString("TypeMappingAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updating Regions. ähnelt.
        /// </summary>
        internal static string UpdatingRegions {
            get {
                return ResourceManager.GetString("UpdatingRegions", resourceCulture);
            }
        }
    }
}
